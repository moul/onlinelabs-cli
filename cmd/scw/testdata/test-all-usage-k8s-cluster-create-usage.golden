üé≤üé≤üé≤ EXIT CODE: 0 üé≤üé≤üé≤
üü•üü•üü• STDERRÔ∏èÔ∏è üü•üü•üü•Ô∏è
This method allows to create a new Kubernetes cluster on an account.

USAGE:
  scw k8s cluster create [arg=value ...]

EXAMPLES:
  Create a Kubernetes cluster named foo with cilium as CNI, in version 1.17.4 and with a pool named default composed of 3 DEV1-M
    scw k8s cluster create name=foo version=1.17.4 pools.0.size=3 pools.0.node-type=DEV1-M pools.0.name=default

  Create a Kubernetes cluster named bar, tagged, calico as CNI, in version 1.17.4 and with a tagged pool named default composed of 2 RENDER-S and autohealing and autoscaling enabled (between 1 and 10 nodes)
    scw k8s cluster create name=bar version=1.17.4 tags.0=tag1 tags.1=tag2 cni=cilium pools.0.size=2 pools.0.node-type=RENDER-S pools.0.min-size=1 pools.0.max-size=10 pools.0.autohealing=true pools.0.autoscaling=true pools.0.tags.0=pooltag1 pools.0.tags.1=pooltag2 pools.0.name=default

ARGS:
  [project-id]                                          The project ID where the cluster will be created
  name                                                  The name of the cluster
  [description]                                         The description of the cluster
  [tags.{index}]                                        The tags associated with the cluster
  version                                               The Kubernetes version of the cluster
  cni                                                   The Container Network Interface (CNI) plugin that will run in the cluster (unknown_cni | cilium | calico | weave | flannel)
  [enable-dashboard]                                    The enablement of the Kubernetes Dashboard in the cluster
  [ingress]                                             The Ingress Controller that will run in the cluster (unknown_ingress | none | nginx | traefik | traefik2)
  [pools.{index}.name]                                  
  pools.{index}.node-type                               The node type is the type of Scaleway Instance wanted for the pool
  [pools.{index}.placement-group-id]                    The placement group ID in which all the nodes of the pool will be created
  [pools.{index}.autoscaling]                           The enablement of the autoscaling feature for the pool
  pools.{index}.size                                    The size (number of nodes) of the pool
  [pools.{index}.min-size]                              The minimun size of the pool
  [pools.{index}.max-size]                              The maximum size of the pool
  [pools.{index}.container-runtime]                     The container runtime for the nodes of the pool (unknown_runtime | docker | containerd | crio)
  [pools.{index}.autohealing]                           The enablement of the autohealing feature for the pool
  [pools.{index}.tags.{index}]                          The tags associated with the pool
  [autoscaler-config.scale-down-disabled]               Disable the cluster autoscaler
  [autoscaler-config.scale-down-delay-after-add]        How long after scale up that scale down evaluation resumes
  [autoscaler-config.estimator]                         Type of resource estimator to be used in scale up (unknown_estimator | binpacking)
  [autoscaler-config.expander]                          Type of node group expander to be used in scale up (unknown_expander | random | most_pods | least_waste | priority)
  [autoscaler-config.ignore-daemonsets-utilization]     Ignore DaemonSet pods when calculating resource utilization for scaling down
  [autoscaler-config.balance-similar-node-groups]       Detect similar node groups and balance the number of nodes between them
  [autoscaler-config.expendable-pods-priority-cutoff]   Pods with priority below cutoff will be expendable
  [autoscaler-config.scale-down-unneeded-time]          How long a node should be unneeded before it is eligible for scale down
  [auto-upgrade.enable]                                 Whether or not auto upgrade is enabled for the cluster
  [auto-upgrade.maintenance-window.start-hour]          The start hour of the 2-hour maintenance window
  [auto-upgrade.maintenance-window.day]                 The day of the week for the maintenance window (any | monday | tuesday | wednesday | thursday | friday | saturday | sunday)
  [feature-gates.{index}]                               List of feature gates to enable
  [admission-plugins.{index}]                           List of admission plugins to enable
  [organization-id]                                     Organization ID to use. If none is passed the default organization ID will be used
  [region=fr-par]                                       Region to target. If none is passed will use default region from the config (fr-par | nl-ams)

FLAGS:
  -h, --help   help for create
  -w, --wait   wait until the cluster is ready

GLOBAL FLAGS:
  -c, --config string    The path to the config file
  -D, --debug            Enable debug mode
  -o, --output string    Output format: json or human, see 'scw help output' for more info (default "human")
  -p, --profile string   The config profile to use
